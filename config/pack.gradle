
def getDate = { ->
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}

android {

    flavorDimensions 'wang'
    productFlavors {
        base {
            dimension 'wang'
            applicationId "com.jason.base"
            versionCode 1
            versionName "${getDate}-1.1."
        }
        form {
            dimension 'wang'
            applicationId "com.jason.form"
            versionCode 1
            versionName "${getDate}-1.2."
        }
    }
    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        def runTasks = gradle.getStartParameter().taskNames
        productFlavors.each { flavor ->
            flavor.versionCode = versionProps["VERSION_CODE_${flavor.name}"].toInteger()
            flavor.versionName = flavor.versionName + String.valueOf(++flavor.versionCode)
            def taskname = ":myapp:assemble${flavor.name.capitalize()}Release"
            runTasks.each { info ->
                if (info == taskname) {
                    versionProps["VERSION_CODE_${flavor.name}"] = String.valueOf(flavor.versionCode)
                    versionProps.store(versionPropsFile.newWriter(), null)
                }
            }
        }
    }
    android.applicationVariants.all { variant ->
        println variant.name
        variant.outputs.all {
            if (outputFileName.endsWith(".apk")) {
                if ('release'.equals(variant.buildType.name)) {
                    def appName = "app-TemperatureMeasureBaseVersion"
                    def flavorName = variant.productFlavors[0].name
                    def apkType = variant.buildType.name
                    def verName = variant.versionName
                    def fileName = appName + "-" + flavorName + "-" + apkType + "-" + verName + ".apk"
                    outputFileName = fileName
                }
            }
        }
    }
}






